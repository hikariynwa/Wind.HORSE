<div class="relative min-h-screen flex flex-col items-center bg-gray-100">
  <!-- タイトル部分 -->
  <div class="w-full text-center py-6">
    <div class="text-3xl sm:text-4xl"><%= t("views.location_name.#{@location_name.downcase}") %>競馬場</div>
  </div>
  <!-- 風の情報を取得するボタン -->
  <div class="w-full flex justify-center py-6">
    <div>
      <button id="fetch-wind" class="text-xl sm:text-2xl bg-green-600 p-3 text-white w-full max-w-sm rounded-lg">風の情報を取得する</button>
      <div id="wind-result" class="mt-4 text-lg sm:text-2xl text-blue-500 w-full text-center"></div>
    </div>
  </div>
  <!-- 芝/砂と距離選択の表示 -->
  <div class="w-full flex justify-center py-6">
    <%= render 'shared/course_select' %>
  </div>

  <!-- 競馬場コース画像-->
  <div id="course-image" class="flex justify-center mt-16" >
    <%= image_tag @course_image, alt: "#{@location_name}競馬場コース", class: "max-w-xs sm:max-w-md md:max-w-lg lg:max-w-xl h-auto" %>
  </div>

  <div class="absolute top-48 right-1/2 transform translate-x-1/2 max-w-xs sm:max-w-md md:right-96 md:translate-x-0 direction-image">
    <%= image_tag 'direction.png', alt: "北", class: "w-16 h-auto sm:w-20 md:w-24 lg:w-28", style: "transform: rotate(#{@course_rotation});" %>
  </div>

  <%= form_with model: @search_data, url: search_datas_path, local: true, class: "w-full max-w-xl mx-auto text-center" do |f| %>
    <%= f.hidden_field :location_name, value: @location_name %>
    <%= f.hidden_field :wind_speed, value: @wind_speed %>
    <%= f.hidden_field :wind_direction, value: @wind_direction %>

    <div class="mb-4">
      <%= f.label :memo, "メモ", class: "block text-lg mb-2" %>
      <%= f.text_area :memo, class: "w-full border rounded-lg p-2" %>
    </div>

    <%= f.submit "保存する", class: "bg-blue-500 text-white px-4 py-2 rounded-lg" %>
  <% end %>
</div>

<script>
  // 風の情報を取得するボタンのイベントリスナー
  document.getElementById('fetch-wind').addEventListener('click', function() {
  // location_name の値をフォームから取得
    let location = document.querySelector('input[name="search_data[location_name]"]').value;

  // 日本語の地名を対応する英語表記に変換
    if (location === '東京') {
      location = 'Fuchu';  // 府中（東京競馬場）
    } else if (location === '京都') {
      location = 'Fushimi';  // 伏見（京都競馬場）
    } else if (location === '新潟') {
      location = 'Niigata';  // 新潟
    }

    fetch(`/winds/${location}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
      }
    })
    .then(response => response.json())
    .then(data => {
      const resultElement = document.getElementById('wind-result');
      if (data.error) {
        resultElement.textContent = data.error;
      } else {
        resultElement.textContent = `風速: ${data.wind_speed} m/s, 風向: ${data.wind_direction}`;
        document.querySelector('input[name="search_data[wind_speed]"]').value = data.wind_speed;
        document.querySelector('input[name="search_data[wind_direction]"]').value = data.wind_direction;
      }
    })
    .catch(error => {
      console.error('Error fetching wind data:', error);
      document.getElementById('wind-result').textContent = '風の情報を取得できませんでした。';
    });
  });

  // ドロップダウンメニューの挙動を制御するコード
  document.querySelectorAll('[data-dropdown-target="button"]').forEach(button => {
    button.addEventListener('click', function() {
      const dropdown = this.nextElementSibling;  // 次の兄弟要素（ドロップダウンメニュー）
      dropdown.classList.toggle('hidden');  // メニューの表示/非表示を切り替え
    });
  });

  // ドロップダウン内の選択肢をクリックした時の処理
  document.querySelectorAll('[data-action="click->dropdown#selectOption"]').forEach(option => {
    option.addEventListener('click', function() {
      const selectedValue = this.getAttribute('data-value');
      const button = this.closest('[data-dropdown-target="dropdown"]').previousElementSibling;  // 親メニューのボタン

      // ボタンの中のspanを更新
      button.querySelector('span').textContent = this.textContent.trim();

      this.closest('[data-dropdown-target="dropdown"]').classList.add('hidden');  // ドロップダウンを隠す
    });
  });
</script>